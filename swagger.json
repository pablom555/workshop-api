{
  "openapi": "3.0.1",
  "info": {
    "title": "Supermercado API",
    "description": "Especificación de la API del primer workshop del Bootcamp avanzado.",
    "version": "1.0.0"
  },
  "tags": [
    {
      "name": "usuarios",
      "description": "Información de los usuarios de la aplicación"
    },
    {
      "name": "productos",
      "description": "Manejo de productos del supermercado"
    },
    {
      "name": "carros",
      "description": "Operaciones sobre los productos que un usuario va a comprar"
    },
    {
      "name": "login",
      "description": "Manera de ingresar a la aplicación"
    }
  ],
  "paths": {
    "/productos": {
      "post": {
        "tags": [
          "productos"
        ],
        "summary": "Solo accesible por el Admin",
        "description": "Permite agregar un nuevo producto al catálogo",
        "operationId": "agregarProducto",
        "requestBody": {
          "description": "Producto que se necesita agregar al supermercado.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Producto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Operación exitosa",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Producto"
                }
              }
            }
          },
          "400": {
            "description": "Input inválido"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "get": {
        "tags": [
          "productos"
        ],
        "description": "Encuentra todos los productos disponibles, pudiendo ser filtrados por categoria",
        "operationId": "obtenerProductos",
        "parameters": [
          {
            "name": "categoria",
            "in": "query",
            "description": "Categorias que deben ser tenidas en cuenta para el filtrado",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Producto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Categoria inválida",
            "content": {}
          }
        }
      }
    },
    "/productos/{idProducto}": {
      "get": {
        "tags": [
          "productos"
        ],
        "description": "Devuelve un único producto en base a su ID",
        "operationId": "obtenerProducto",
        "parameters": [
          {
            "name": "idProducto",
            "in": "path",
            "description": "ID del producto a devolver",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Producto"
                }
              }
            }
          },
          "400": {
            "description": "ID de producto inválido",
            "content": {}
          },
          "404": {
            "description": "Producto no encontrado",
            "content": {}
          }
        }
      },
      "delete": {
        "tags": [
          "productos"
        ],
        "description": "Elimina un producto",
        "summary": "Solo accesible por el Admin",
        "operationId": "eliminarProducto",
        "parameters": [
          {
            "name": "idProducto",
            "in": "path",
            "description": "ID del producto a eliminar",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Operación exitosa"
          },
          "400": {
            "description": "ID de producto inválido",
            "content": {}
          },
          "404": {
            "description": "Producto no encontrado",
            "content": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "productos"
        ],
        "description": "Modificar un producto existente",
        "summary": "Solo accesible por el Admin",
        "operationId": "modificarProducto",
        "parameters": [
          {
            "name": "idProducto",
            "in": "path",
            "description": "ID del producto a modificar",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Producto que debe ser modificado",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Producto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Operacion exitosa",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Producto"
                }
              }
            }
          },
          "400": {
            "description": "ID de producto inválido",
            "content": {}
          },
          "404": {
            "description": "Producto no encontrado",
            "content": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/carros": {
      "post": {
        "tags": [
          "carros"
        ],
        "description": "Crea un nuevo carro vacío para el usuario. Un usuario solo puede tener un carro activo.",
        "summary": "Solo accesible por el Comprador",
        "operationId": "crearCarro",
        "responses": {
          "201": {
            "description": "Operación exitosa",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Carro"
                }
              }
            }
          },
          "400": {
            "description": "Ya existe un carro activo para ese Comprador"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/carros/{idCarro}": {
      "delete": {
        "tags": [
          "carros"
        ],
        "description": "Elimina un carro con ese ID, solo si el carro se encuentra en estado Activo y le pertenece a dicho Comprador",
        "summary": "Solo accesible por el Comprador",
        "operationId": "eliminarCarro",
        "parameters": [
          {
            "name": "idCarro",
            "in": "path",
            "description": "ID del carro a eliminar",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "203": {
            "description": "Operación exitosa"
          },
          "400": {
            "description": "ID de carro inválido o estado Cerrado",
            "content": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "carros"
        ],
        "description": "Compra los productos que se encuentran en el carro, solo si el carro se encuentra en estado Activo y le pertenece a dicho Comprador. Carro pasa a estado de Cerrado",
        "summary": "Solo accesible por el Comprador",
        "operationId": "comprarCarro",
        "parameters": [
          {
            "name": "idCarro",
            "in": "path",
            "description": "ID del carro a comprar",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Carro"
                }
              }
            }
          },
          "400": {
            "description": "ID de carro inválido o carro en estado Cerrado",
            "content": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/carros/{idCarro}/productos": {
      "get": {
        "tags": [
          "carros"
        ],
        "description": "Dado el ID de un carro, devolver todos los productos que se encuentren en él, solo si le pertenece al Comprador.",
        "summary": "Solo accesible por el Comprador",
        "operationId": "obtenerProductosEnCarro",
        "parameters": [
          {
            "name": "idCarro",
            "in": "path",
            "description": "ID del carro cuyos productos se desean obtener",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "carro": {
                      "$ref": "#/components/schemas/Producto"
                    },
                    "productos": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Producto"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Carro no encontrado",
            "content": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/carros/{idCarro}/productos/{idProducto}": {
      "post": {
        "tags": [
          "carros"
        ],
        "description": "Agrega un nuevo producto al carro del usuario, solo si el carro le pertenece, se encuentra en estado Activo y hay disponibilidad en el catálogo de productos",
        "summary": "Solo accesible por el Comprador",
        "operationId": "agregarProductoACarro",
        "parameters": [
          {
            "name": "idCarro",
            "in": "path",
            "description": "ID del carro en donde se desea agregar un producto",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "idProducto",
            "in": "path",
            "description": "ID del producto a agregar",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Operación exitosa",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Producto"
                }
              }
            }
          },
          "404": {
            "description": "Carro o producto no encontrado",
            "content": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "carros"
        ],
        "description": "Dado un ID del carro, eliminar el producto especificado",
        "operationId": "eliminarProductoDeCarro",
        "parameters": [
          {
            "name": "idCarro",
            "in": "path",
            "description": "ID del carro de donde se desea eliminar el producto",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "idProducto",
            "in": "path",
            "description": "ID del producto que se desea eliminar",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "203": {
            "description": "Operación exitosa"
          },
          "404": {
            "description": "ID del carro o del producto no encontrado",
            "content": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/usuarios": {
      "post": {
        "tags": [
          "usuarios"
        ],
        "description": "Se crea un nuevo usuario",
        "operationId": "crearUsuario",
        "requestBody": {
          "description": "Objeto con data del usuario a crear",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Usuario"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Operación exitosa",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Usuario"
                }
              }
            }
          },
          "400": {
            "description": "Input incorrecto"
          }
        }
      }
    },
    "/usuarios/{idUsuario}": {
      "get": {
        "tags": [
          "usuarios"
        ],
        "description": "Obtener usuario a través de su ID",
        "operationId": "obtenerUsuario",
        "parameters": [
          {
            "name": "idUsuario",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Usuario"
                }
              }
            }
          },
          "400": {
            "description": "ID de usuario inválido",
            "content": {}
          },
          "404": {
            "description": "Usuario no encontrado",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [
          "usuarios"
        ],
        "description": "Modificar usuario, solo posible si se es dicho usuario",
        "summary": "Solo accesible por el Comprador",
        "operationId": "modificarUsuario",
        "parameters": [
          {
            "name": "idUsuario",
            "in": "path",
            "description": "ID del usuario a modificar",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Usuario a modificar",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Usuario"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Usuario"
                }
              }
            }
          },
          "400": {
            "description": "ID de usuario inválido",
            "content": {}
          },
          "404": {
            "description": "Usuario no encontrado",
            "content": {}
          }
        }
      },
      "delete": {
        "tags": [
          "usuarios"
        ],
        "description": "Eliminar usuario, solo posible si se es dicho usuario",
        "summary": "Solo accesible al Comprador",
        "operationId": "eliminarUsuario",
        "parameters": [
          {
            "name": "idUsuario",
            "in": "path",
            "description": "ID del usuario a eliminar",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Operación exitosa"
          },
          "400": {
            "description": "ID de usuario inválido",
            "content": {}
          },
          "404": {
            "description": "Usuario no encontrado",
            "content": {}
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": [
          "login"
        ],
        "description": "Logea al usuario a la aplicación",
        "operationId": "login",
        "requestBody": {
          "description": "Datos necesarios para poder ingresar",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "integer"
                  }
                },
                "required": [
                  "username",
                  "password"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Usuario logeado con éxito",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Username o password inválidos",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Carro": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "estado": {
            "type": "string",
            "description": "Estado del carro",
            "example": "cerrado",
            "enum": [
              "activo",
              "cerrado"
            ]
          }
        }
      },
      "Usuario": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "username": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "role": {
            "type": "string"
          }
        }
      },
      "Producto": {
        "required": [
          "nombre",
          "precio",
          "categoria"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "categoria": {
            "type": "string",
            "example": "Perfumería e Higiene"
          },
          "nombre": {
            "type": "string",
            "example": "Acondicionador para cabellos dañados"
          },
          "cantidad": {
            "type": "integer",
            "format": "int64"
          },
          "descripcion": {
            "type": "string",
            "example": "Acondicionador"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}